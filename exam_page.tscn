[gd_scene load_steps=2 format=3 uid="uid://daroytbl7v7ql"]

[sub_resource type="GDScript" id="GDScript_v0fw7"]
script/source = "extends Node

const QuestionUIScene = preload(\"res://QuestionUI.tscn\")

var all_questions = []
var current_question_index = 0

func _ready():
	var file = FileAccess.open(\"res://resource/math_001.json\", FileAccess.READ)
	var content = JSON.parse_string(file.get_as_text())
	
	if content:
		print(\"Sėkmingai įkeltas egzaminas\", content.egzamino_pavadinimas)
		print(\"Klausimų kiekis: \", content.klausimai.size())
		all_questions = content.klausimai
		show_current_question()
	else:
		print(\"Klaida nuskaitant JSON failą.\")

func show_current_question():
	if all_questions.size() > 0:
		var question_instance = QuestionUIScene.instantiate()
		
		var question_data = all_questions[current_question_index]
		question_instance.display_question(question_data)
		
		question_instance.answer_selected.connect(_on_user_answered)
		
		get_tree().current_scene.add_child(question_instance)

func _on_user_answered(user_answer):
	var correct_answer = all_questions[current_question_index].atsakymas
	if user_answer == correct_answer:
		print(\"ATSAKYMAS TEISINGAS!\")
	else:
		print(\"ATSAKYMAS NETEISINGAS. Teisingas atsakymas: \", correct_answer)
	
	#TODO: implement logic for follow up question
"

[node name="exam_page" type="Node2D"]
script = SubResource("GDScript_v0fw7")
